name: Publish package to the Maven Central Repository
on:
  #release:
  #  types: [created]
  push:
    tags:
      - 'tag*' 
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Maven Central Repository
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          server-id: ossrh
          server-username: ${{ secrets.OSSRH_USERNAME }}
          server-password: ${{ secrets.OSSRH_TOKEN }}
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo ${GITHUB_REF##*/} | cut -d - -f 2)
      - name: Publish package
        run: |
          cat /home/runner/.m2/settings.xml
          JAVA_VERSION=${{ steps.get_version.outputs.VERSION }}
          if [[ "$JAVA_VERSION" == *"post"* ]]; then
            echo "Java version post"
            JAVA_VERSION="${JAVA_VERSION/post/\.}"
          elif  [[ "$JAVA_VERSION" == *"b"* ]]; then
            echo "Java version beta:"
            JAVA_VERSION="${JAVA_VERSION/b/-beta-}"
          else
            echo "Java version Release"
            JAVA_VERSION=$JAVA_VERSION.RELEASE
          fi
          echo "Java version: $JAVA_VERSION"
          JAVA_VERSION="20.1.4-SNAPSHOT"
          cd java
          mvn versions:set -DnewVersion=$JAVA_VERSION 
          mvn clean --batch-mode deploy -DskipTests -Dgpg.passphrase=${{ secrets.AVISDK_PGP_PASSPHRASE }}
          env:
            MAVEN_GPG_PASSPHRASE: ${{ secrets.AVISDK_PGP_PASSPHRASE }}
            MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
            MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
